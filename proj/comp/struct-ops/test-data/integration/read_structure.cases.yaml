# read_structure integration test cases
# Testing realistic code extraction scenarios

- name: typescript_function_among_others
  file: calculator.ts
  content: |2
    import { Logger } from './logger';
    
    const DEFAULT_MULTIPLIER = 2;
    
    export function initialize() {
      console.log('Initializing');
    }
    
    export function calculate(x: number): number {
      return x * DEFAULT_MULTIPLIER;
    }
    
    export function cleanup() {
      console.log('Cleaning up');
    }
  target: "calculate"
  expected:
    matches:
      - text: |2
          export function calculate(x: number): number {
            return x * DEFAULT_MULTIPLIER;
          }
        line_range_inclusive: [9, 11]
        parent_context: null

- name: typescript_class_with_method
  file: class.ts
  content: |2
    export class Calculator {
      calculate(x: number): number {
        return x * 2;
      }
    }
  target: "Calculator"
  expected:
    matches:
      - text: |2
          export class Calculator {
            calculate(x: number): number {
              return x * 2;
            }
          }
        line_range_inclusive: [1, 5]

- name: typescript_method_only
  file: class.ts
  content: |2
    export class Calculator {
      calculate(x: number): number {
        return x * 2;
      }
    }
  target: |
    Calculator
    calculate
  expected:
    matches:
      - text: |2
          calculate(x: number): number {
            return x * 2;
          }
        line_range_inclusive: [2, 4]

- name: typescript_ambiguous_same_name
  file: ambiguous.ts
  content: |2
    class Foo {
      calculate() {
        return 1;
      }
    }
    
    function calculate() {
      return 2;
    }
  target: "calculate"
  expected:
    matches:
      - text: |2                    #thoughts... maybe we should include the parent header or signature in the response.  in case LLM in confused about multipel hits
          calculate() {                 
            return 1;
          }
        line_range_inclusive: [2, 4]
      - text: |2
          function calculate() {
            return 2;
          }
        line_range_inclusive: [7, 9]

- name: typescript_with_decorator
  file: decorated.ts
  content: |2
    @Injectable()
    export class UserService {
      getUser(id: string) {
        return { id };
      }
    }
  target: "UserService"
  expected:
    matches:
      - text: |2
          @Injectable()
          export class UserService {
            getUser(id: string) {
              return { id };
            }
          }
        line_range_inclusive: [1, 6]

- name: typescript_target_not_found
  file: missing.ts
  content: |2
    function doSomething() {
      return true;
    }
  target: "doSomethingElse"
  expected:
    matches: []

- name: python_simple_function
  file: example.py
  content: |2
    def calculate(x):
        return x * 2
  target: "calculate"
  expected:
    matches:
      - text: |2
          def calculate(x):
              return x * 2
        line_range_inclusive: [1, 2]

- name: python_function_with_decorator
  file: decorated.py
  content: |2
    @cache
    def expensive_operation(n):
        result = 0
        for i in range(n):
            result += i * i
        return result
  target: "expensive_operation"
  expected:
    matches:
      - text: |2
          @cache
          def expensive_operation(n):
              result = 0
              for i in range(n):
                  result += i * i
              return result
        line_range_inclusive: [1, 6]

- name: python_class_with_docstring
  file: documented.py
  content: |2
    class Calculator:
        """A simple calculator class."""
        
        def add(self, a, b):
            return a + b
        
        def multiply(self, a, b):
            return a * b
  target: "Calculator"
  expected:
    matches:
      - text: |2
          class Calculator:
              """A simple calculator class."""
              
              def add(self, a, b):
                  return a + b
              
              def multiply(self, a, b):
                  return a * b
        line_range_inclusive: [1, 8]

- name: python_nested_function
  file: nested.py
  content: |2
    def outer():
        def inner():
            return 42
        return inner()
  target: |
    outer
    inner
  expected:
    matches:
      - text: |2
          def inner():
              return 42
        line_range_inclusive: [2, 3]

- name: python_module_level_code
  file: main.py
  content: |2
    import sys
    
    def main():
        print("Hello")
    
    if __name__ == "__main__":
        main()
  target: |
    if __name__ == "__main__":
  expected:
    matches:
      - text: |2
          if __name__ == "__main__":
              main()
        line_range_inclusive: [6, 7]

- name: python_ambiguous_methods
  file: multi_class.py
  content: |2
    class Foo:
        def process(self):
            return "foo"
    
    class Bar:
        def process(self):
            return "bar"
  target: "process"
  expected:
    matches:
      - text: |2
          def process(self):
              return "foo"
        line_range_inclusive: [2, 3]
      - text: |2
          def process(self):
              return "bar"
        line_range_inclusive: [6, 7]